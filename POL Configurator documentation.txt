POL Configurator Documentation

Note: Upon launching the Configurator it loads the default settings. If you have settings already configured for your server and you want to keep them, first make sure that the Configurator is showing your POL location in the box at the bottom of the form labelled "Location of your POL directory". Then click the "Load My Config Files" button. If you fail to do this upon saving your settings you will change your previous configuration to whatever settings are showing in the Configurator and you will lose settings that you had prior to using the Configurator.

The POL Configurator is an attempt to make configuring and getting your POL server up and running as easy and straightforward as possible. The POL emulator is very flexible from both a programming (scripting) perspective using eScript as well as from the various settings available in the configuration files that affect the Core's operation. The Core is the pol.exe file that executes your compiled programmes (scripts). I have tried to provide a more user friendly environment, a graphical user interface (GUI), for editing six (and one little file watch.cfg) of the main config files, eCompile.cfg, pol.cfg, servspecopt.cfg, servers.cfg, uoclient.cfg, and combat.cfg. There may be other config files that will be incorporated at a later date. Rather than create tabs for each file I chose to break the settings up based on their behaviour. When you launch the Configurator you will notice the seven tabs at the top of the window, Instructions, Realm Generation, eCompile, Log-in Settings, Server Settings, Game Play Settings, and Logging and Error Reporting.

I suggest that you read through these instructions first before attempting to use the Configurator. This is because for one thing I am not a professional documentation author. Though I think I write good documentation, I realize that is just my imagination. :) Another reason is it will give you a familiarity with the Configurator and the instructions.

Realm Generation
This is the page you should start with. That's why it is the second page just after Instructions. You will use this page to prepare the world files for your POL server. More about this page later.

eCompile
On this page you can set eCompile's settings, compile your eScript programmes (scripts), launch POL and should you desire mass delete certain files from your POL installation. More detail about this page later.

Server Settings
The settings on this page are mostly "behind the scenes" settings that, for the most part won't directly affect game play or be visible in-game. There are exceptions though. The "Tags to be Displayed", "UO Feature Enable", and "Use Tile Prefix" are settings that do affect game play or affect a few things visible in-game.

Game Play Settings
Almost all of the settings on this page will have an effect on game play or the way a character interacts with the environment. They also affect things such as the length of time before a character that is idle can stay logged in, whether or not the server will attempt to catch players using "speed hacks" that allow them to move faster than the client normally allows, and whether more than one client is able to be logged in to the same account simultaneously.

Logging and Error Reporting Behaviour
This page is pretty much what the title describes. Here you can enable the debug log file, useful when you are trying to understand why something isn't working as it should. You can also enable assertions and decide how you want POL to handle them. Also, from here you can tell POL what items should be printed in the console window. One of those settings generate a lot of text. It can be useful information but you might not want that much information to be displayed. So test those settings out and see which ones you are comfortable with. The last thing here is error reporting. A very handy feature available is that POL can generate an email to be sent you if a major problem occurs.


Using the POL Configurator
Most of the buttons, check boxes, text boxes, and combo boxes have tooltips that contain information about the setting. Just hover the mouse pointer over the object, button, text box, check box, or combo box, to see the tooltip. Some will display "No information given for this setting." This means that I could not find any info about this setting either in the available documentation or the corresponding cfg file. 

A note about the default config files: The default config files may contain more settings than your config files. This is because over the years the POL developers have added more settings to the various files. I have endeavoured to make the default files as current and up to date as possible. So when you load your config files into the Configurator and save the settings you will probably end up with larger config files than your original files but that's alright because now you have the additional settings that your files have been missing.

Start the program by double-clicking on the POL_Configurator EXE file. You will see the configuration window. On startup the default settings for the cfg files are loaded. The first thing you need to do is tell the Configurator where your shard files are located. At the bottom of the window you will see the text box under the heading "Location of your POL directory". Use the "Browse" button to select it. Now do the same thing for your UO installation location. Use the browse button to navigate to your UO folder. The settings pages will be inactive until you do this.

If you haven't edited the config files and don't have any custom settings you can go ahead and make changes to the default settings. The default settings are configured for Mondain's Legacy map size and for version 7.x clients and so should work just fine with expansions up to and including Time of Legends, and Endless Journey, atleast as of September 2018. So if those are the expansions you are using there should be no need to change most of the settings. You should still review them though because there are some settings you may want to adjust to your preference such as maximum container weight. Also be sure to check the eCompile settings on the eCompile page. Again the default settings are set for the best use case for most situations but there might be some you want to change. When you are done just click "Save Settings" and the Configurator will save the settings with your changes to the appropriate cfg files. If you have some pre-configured settings you can click on "Load My Config Files" and the configurator will read your cfg files and any settings you have made. Your settings will replace the default settings. Then you can go ahead and change settings to your liking. If you want to keep any settings you have previously made you MUST click the "Load My Config Files" button prior to making any changes in the Configurator. Also this must be done every time you use the Configurator because as stated earlier the Configurator loads the default settings on startup. So remember to retrieve your settings first by clicking on "Load My Config Files". If you fail to do this you WILL lose your previous settings! When you're happy with the changes click "Save Settings". The Configurator will open a window informing you that your settings were saved. If you choose to, you can just save the default settings without changing anything or without loading your pre-existing cfg files. Just save the default settings right after starting the Configurator. If at any time you wish to reload the default settings you just click on the "Load Default Cfgs" button. Doing this will reset any changes you have made in the Configurator. No changes wll be made to your files until you click on the "Save Settings" button. There is a special case with the uoclient.cfg file which I cover below. Be sure to read that information because your uoclient.cfg is not loaded automatically when you click on "Load My Config Files" button until you tell the Configurator where your uoclient.cfg file is located. Again, see the info below about that file.

Ok. If you are still with me I will describe in brief detail how to use the Realm Generation and eCompile pages

First make sure you have told the Configurator where your POL and UO installation folders are. At the bottom of the window there are buttons to browse to them.


The realm (facet) Generation page
At the top left of the Realm Generation page you will see a button labelled "Copy Required files". If it is greyed out that means you haven't told the Configurator where your UO installation is. So if it's greyed out go and do that first. Click that button to copy the files necessary for generating the facets (realms). You will see a command line window open up as the files are copied from your UO installation to your POL installation directory. Once that is done look below the button you just clicked and ensure that all three check boxes are checked, Build multis.cfg, Build tiles.cfg, and Build landtiles.cfg. Next click the "Build the selected cfg files" button. A black console window will open showing that the files are being created.

Now it's time to generate the facets (realms) <insert massive echo effect here> :).
Just to the right of the "Copy Required Files" button you will see the map generation settings. UO has used two (2) different map sizes for Felucca and Trammel over the years. Prior to the Mondain's Legacy expansion the map size for those two maps was 6144 squares across by 4096 squares down (6144 on th X axis and 4096 on the Y axis). When Mondain's Legacy was released they increased the X axis map size to 7168 squares. So choose your map size using the combo box. Next decide which facets you want to build. There's a check box to select all or you can pick and choose using the individual check boxes. Now decide if you want to build the facets using the DIF files. Oh you ask, "what are DIF files?" They are files containing additional patches to the maps. Some are minor patches and some are major patches. They make changes to the terrain and textures. I don't know what changes but I think the changes made to Magincia and (I think) Moonglow after Mondaiin's Legacy might be part of a DIF files patch information. Anyway there is a "Select all DIFs" check box or once again you can pick and choose which facet you want to build using DIFs. Once you have everything set the way you want it for building the facets just click the "Build the selected facets" button and once again a black console window will open and uoconvert will build those facets you chose.


Now we come to the eCompile page.
eCompile is used to make the scripts that are human readable into the format that the POL Core will execute. As with the other configuration files eCompile has a number of settings. All of them are set to the defaults recommended by the POL Development Team. Each setting has a hint that will be displayed if you hover the mouse pointer over the setting. I am not going to cover the various settings here. That's what the hints are for. What I am going to cover are the eCompile buttons. The first button you see is labelled "Compile modified Scripts and send output to the console." which will compile only those scripts you have modified since you last compiled your files. If this is the first time you are compiling your SRC files and you have no ECL files in your scripts, which will be the case if you are compiling a freshly downloaded Distro in a new POL installation then all files will be compiled. If however you have compiled the Distro and made some changes to some SRC files then only those will be compiled. This button will allow eCompile to stop the compilation process if it encounters an error in one of your programmes (scripts). The console window will stay open until you press a key so you can see the error and where it was found.

Note: In order for the "Compile modified files" process to work properly you MUST have the "Create DEP files" setting checked in the eCompile settings, which it is by default.

The next button down from "Compile updated Scripts and send output to the console." is "Compile All Scripts and Send Output to ecompile.log". This will open a console window but you will see almost no output from eCompile because it is sending that output to a log file, ecompile.log. This option will compile all scripts and if eCompile encounters an error it will report it in the log file but will go on to the next programme to compile. It will be up to you to search the log file for errors. Please note that there is no output to the console while eCompile is compiling. Don't worry. It is still running and will finish.

The last button is just labelled "eCompile". It is for those people who wish to set some of eCompile's 'switches' that can over-ride the eCompile configuration settings. If you are just starting out you should use one of the other eCompile buttons until you are familiar with eCompile and its settings.

Whenever you make a change to a SRC or INC file recompile your files using the "Compile modified Scripts and send output to the console." button.

When you update to a new version of the Core you MUST recompile all of your files after removing all ECL, DEP, LST, DBG, and DBG.TXT files. See the POL Clean-up section for help with removing those files.

A few words about eCompile's messages...
Besides the "Compiling", "Writing file", and possibly "Deleting file" messages you will see three (3) other messages:

Error: This means your script did not compile and therefore the ECL file that the Core executes ws not created and won't run. You need to examine the file and try to determine the error based on eCompile's report. I say "try" because sometimes eCompile isn't very descriptive when it comes to error messages.

Case mismatch: eCompile is telling you that the name of an include file one of your scripts is referencing does not match the 'case' of the actual file name. For example, if you have a line "include/eventid"; and the file on disc is actually named 'eventID.inc' eCompile will report this as a case mismatch. On Windows systems this is not a problem because Windows doesn't take case into account when it comes to file or directory names. EveNTId and eVentiD look the same to Windows. However on Linux systems the case must match so in the first example, eventid versus eventID, Linux will be looking for two different files. So if you ever think you will release your scripts for others to use or if you are running or might want to run POL on Linux it is important to "keep case" for file names and file references. In fact you should probably make it a practice to keep case anyway.

Warnings: These are messages that eCompile gives for things that are not critical but that may require attention. Almost all the time these are warnings about unused variables. Though not critical unused variables take up extra memory. So you should try to remove any contained in your scripts. Occasionally, when a function or operator is being deprecated in a future release of POL, the developers will tell eCompile to print a warning informing you of the upcoming change so that you can go ahead and modify your scripts. Usually eCompile is already able to compile with the new operator or replacing function so your changes to the new way should compile even though they also compile using the current operator or function. This was the situation when the single equals symbol was deprecated in favour of the double equals in equality tests. Be advised though that you may not get any advanced notice of changes in this manner and that you may find that something that compiled on one Core release doesn't compile on the next release. So whenever there is a new Core version you should read core-changes.txt for new features, changes and bug fixes.

POL Clean-up
You will notice on the eCompile page is the POL Clean-up section.
This section allows you to mass delete various files from your POL installation. There might be times when you want to do a fresh compile of all your scripts. In that situation you would check the first 5 check boxes, remove ECL, DEP, LST, DBG, and DBG.TXT files. You might want to save an archive of your shard. In which case you would check all of the boxes. Maybe you have just fixed a bug in a programme and you want to delete the debugging files then you would check LST, DBG, and DBG.TXT. There is a "Remove Custom" checkbox so you can specify a custom file type to delete. Just enter the filespec of the file type you want to delete in the text box and check the Remove Custom check box.

Examples of possible filespecs are:
*.zip - remove all zip files.
*fred.txt - remove all files with fred as the last 4 leetters of the name with the txt extension.
draft.* - remove all files with the name draft no matter what the file extension.
*.* - remove ALL FILES. THIS SHOULD NEVER BE ENTERED IN THE TEXT BOX!!!!!!!

You must BE CAREFUL with this because you could enter a filespec that could render your server inoperable.

Once you have decided which files you want to delete Click the "Remove all selected file types" button and the Configurator will delete all occurrences  of those file types in your POL directory.


Using profiles.
If you are programming in eScript and you have multiple POL installations that you work with you can set-up profiles for each installation of POL. A profile saves the POL installation directory, UO installation directory, and the uoclient.cfg directory. This enables switching between different installations of POL much easier. 

You can create a profile from the lower right side of the Configurator. To add a profile make sure you have told the Configurator where all of your settings files are located. Then enter a name in the New Profile Name text box. Then click the Add Profile button. Your new profile will appear in the drop-down list. If you wish to delete a profile, select it in the drop-down list and click the delete button. If for some reason you need to update a profile, select it in the drop-down list and click the Update Profile button. Now switching from one POL installation to another is simple. Just pick a profile from the drop-down list and click the Load Profile button. You can create up to ten (10) profiles.

Note:
Loading a profile does NOT automatically load the settings files for that profile's installation. You will have to click the Load My Config Files button once you have switched profiles.


I think I have covered the things you need to use the POL Configurator.

I hope you find the POL Configurator useful.

This program was built using the Lazarus Integrated Development Environment and Free Pascal.
https://www.lazarus-ide.org/

The POL Configurator uses the command line utility LegacyMULConverter by Eos to perform the *.MUL file extraction from the UOP files used by newer UO clients. I want to thank Eos for writing such a useful and needed utility. The source code as well as the binary and DLL are included with the distribution of the POL Configurator in the LegacyMULConverter-v4 directory under the POL Configurator directory.

Feel free to email me at hopelives@outlook.com if you have any suggestions or contact me on
the POL forums at polserver.com.

Thanks,
Yukiko

Titus 2:13